// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AssignTask implements assignTask operation.
//
// Assign multiple users to a task.
//
// POST /v1/tasks/{id}/assign
func (UnimplementedHandler) AssignTask(ctx context.Context, req *AssignTaskReq, params AssignTaskParams) error {
	return ht.ErrNotImplemented
}

// CreateTask implements createTask operation.
//
// Create a new task.
//
// POST /v1/tasks
func (UnimplementedHandler) CreateTask(ctx context.Context, req *Task) (r *Task, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTask implements deleteTask operation.
//
// Delete an existing task.
//
// DELETE /v1/tasks/{id}
func (UnimplementedHandler) DeleteTask(ctx context.Context, params DeleteTaskParams) error {
	return ht.ErrNotImplemented
}

// GetTask implements getTask operation.
//
// Retrieve task details by ID.
//
// GET /v1/tasks/{id}
func (UnimplementedHandler) GetTask(ctx context.Context, params GetTaskParams) (r *Task, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTasks implements listTasks operation.
//
// Retrieve a list of tasks.
//
// GET /v1/tasks
func (UnimplementedHandler) ListTasks(ctx context.Context) (r []Task, _ error) {
	return r, ht.ErrNotImplemented
}

// Login implements login operation.
//
// Authenticate user and return JWT.
//
// POST /v1/login
func (UnimplementedHandler) Login(ctx context.Context, req *LoginReq) (r *LoginOK, _ error) {
	return r, ht.ErrNotImplemented
}

// SignUp implements signUp operation.
//
// Register a new user.
//
// POST /v1/signup
func (UnimplementedHandler) SignUp(ctx context.Context, req *SignUpReq) (r *SignUpCreated, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateTask implements updateTask operation.
//
// Update an existing task.
//
// PUT /v1/tasks/{id}
func (UnimplementedHandler) UpdateTask(ctx context.Context, req *Task, params UpdateTaskParams) (r *Task, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
